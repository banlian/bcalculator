<!DOCTYPE html>
<html lang="zh">

<head>
    <meta charset="UTF-8">
    <title>数据统计可视化</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .input-container {
            margin-bottom: 20px;
        }

        textarea {
            width: 100%;
            height: 200px;
            margin-bottom: 10px;
            padding: 10px;
            font-size: 14px;
        }

        button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        #monthlyTotals {
            margin: 20px 0;
            padding: 15px;
            background-color: #f5f5f5;
            border-radius: 4px;
        }

        #chartContainer {
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <h1>数据统计可视化</h1>

    <div class="input-container">
        <textarea id="dataInput" placeholder="请输入数据，格式如：
4月7号:8550💰
4月8号:2130💰
..."></textarea>
        <button onclick="processAndDisplay()">生成统计图</button>
    </div>

    <div id="monthlyTotals"></div>
    <div id="chartContainer"></div>

    <script>
        // 处理数据
        function processData(rawData) {
            // 将中文冒号替换为英文冒号
            const normalizedData = rawData.replace(/：/g, ':');
            const lines = normalizedData.split('\n');
            const processedData = [];
            const monthlyTotals = {};
            let totalAmount = 0;

            lines.forEach(line => {
                // 使用正则表达式匹配日期和数字
                const match = line.match(/(\d+月\d+号)[^\d]*([^\n]*)/);
                if (match) {
                    const date = match[1];
                    let value = match[2].trim();
                    // 如果值不是纯数字，则替换为0
                    const numericValue = /^\d+$/.test(value) ? parseInt(value) : 0;

                    // 提取月份（例如从"4月7号"中提取"4月"）
                    const month = date.match(/(\d+)月/)[0];

                    // 累加月度总额
                    monthlyTotals[month] = (monthlyTotals[month] || 0) + numericValue;

                    processedData.push({
                        date: date,
                        value: numericValue
                    });

                    totalAmount += numericValue;
                }
            });

            return {
                dailyData: processedData,
                monthlyTotals: monthlyTotals,
                totalAmount: totalAmount
            };
        }

        // 生成图表
        function generateChart(data) {
            // 清除旧的图表
            const chartContainer = document.getElementById('chartContainer');
            chartContainer.innerHTML = '';

            const canvas = document.createElement('canvas');
            canvas.width = 1000;
            canvas.height = 500;
            chartContainer.appendChild(canvas);

            // 判断是否为法定假期
            function isHoliday(month, day) {
                const holidays = {
                    '1': [1], // 元旦
                    '5': [1, 2, 3], // 劳动节
                    '10': [1, 2, 3, 4, 5, 6, 7], // 国庆节
                };

                // 农历节日（使用公历日期）
                const lunarHolidays = {
                    '2': [10], // 春节（示例日期，需要根据实际农历调整）
                    '4': [5], // 清明节
                    '6': [10], // 端午节（示例日期，需要根据实际农历调整）
                    '9': [15], // 中秋节（示例日期，需要根据实际农历调整）
                };

                return (holidays[month] && holidays[month].includes(day)) ||
                    (lunarHolidays[month] && lunarHolidays[month].includes(day));
            }

            // 判断是否为周末或假期
            function isWeekendOrHoliday(dateStr) {
                const match = dateStr.match(/(\d+)月(\d+)号/);
                if (match) {
                    const month = parseInt(match[1]);
                    const day = parseInt(match[2]);
                    const date = new Date(2024, month - 1, day);
                    const dayOfWeek = date.getDay();
                    return dayOfWeek === 5 || dayOfWeek === 6 || isHoliday(month, day);
                }
                return false;
            }

            const ctx = canvas.getContext('2d');

            // 计算平均值
            const average = data.dailyData.reduce((sum, item) => sum + item.value, 0) / data.dailyData.length;

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.dailyData.map(item => item.date),
                    datasets: [
                        {
                            label: '每日金额',
                            data: data.dailyData.map(item => item.value),
                            backgroundColor: data.dailyData.map(item => {
                                const isSpecialDay = isWeekendOrHoliday(item.date);
                                return isSpecialDay ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)';
                            }),
                            borderColor: data.dailyData.map(item =>
                                isWeekendOrHoliday(item.date) ? 'rgba(255, 99, 132, 1)' : 'rgba(54, 162, 235, 1)'
                            ),
                            borderWidth: 1,
                            order: 2
                        },
                        {
                            label: '平均值',
                            data: data.dailyData.map(() => average),
                            type: 'line',
                            borderColor: 'rgba(255, 11, 11, 1)',
                            borderWidth: 2,
                            borderDash: [5, 5],
                            fill: false,
                            pointRadius: 0,
                            order: 1
                        }
                    ]
                },
                options: {
                    responsive: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: '金额 (元)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: '日期'
                            }
                        }
                    }
                }
            });

            // 显示月度总计
            const monthlyTotalsDiv = document.getElementById('monthlyTotals');
            monthlyTotalsDiv.innerHTML = '<h2>月度总计</h2>';
            let grandTotal = 0;
            for (const [month, total] of Object.entries(data.monthlyTotals)) {
                monthlyTotalsDiv.innerHTML += `<p>${month}: ${total.toLocaleString()} 元</p>`;
                grandTotal += total;
            }
            monthlyTotalsDiv.innerHTML += `<h3>总计: ${grandTotal.toLocaleString()} 元</h3>`;
        }

        // 处理并显示数据
        function processAndDisplay() {
            const rawData = document.getElementById('dataInput').value;
            if (!rawData.trim()) {
                alert('请输入数据！');
                return;
            }
            const processedData = processData(rawData);
            generateChart(processedData);
        }
    </script>
</body>

</html>